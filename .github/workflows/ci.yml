# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dc: [dmd-latest, ldc-latest]
        arch: [x86_64]
        include:
          - { os: ubuntu-latest, dc: dmd-2.102.2, arch: x86_64 }
          - { os: ubuntu-latest, dc: dmd-2.094.2, arch: x86_64 }
          - { os: ubuntu-latest, dc: ldc-1.24.0, arch: x86_64 }
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install D compiler
      uses: dlang-community/setup-dlang@v1
      with:
          compiler: ${{ matrix.dc }}
    - name: Run tests (macos)
      if: matrix.os == 'macOS-latest'
      env:
        MACOS: true
      run: |
        brew install automake
        rm -rf /usr/local/Cellar/openssl
        ln -sf /usr/local/Cellar/openssl@1.1/1.1.1* /usr/local/opt/openssl
        ln -sf /usr/local/Cellar/openssl@1.1/1.1.1*/bin/openssl /usr/local/bin/openssl
        scripts/ci.sh
    - name: Run tests
      if: matrix.os != 'macOS-latest'
      run: scripts/ci.sh
    - name: Upload codecov
      if: matrix.os == 'ubuntu-latest' && matrix.dc == 'dmd-latest'
      env:
        COVERAGE: true
      run: scripts/ci.sh
